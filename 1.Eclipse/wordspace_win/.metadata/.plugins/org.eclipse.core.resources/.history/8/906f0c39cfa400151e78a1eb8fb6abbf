package com.vanminh.demogame;

import com.badlogic.gdx.ApplicationAdapter;
import com.badlogic.gdx.Gdx;
import com.badlogic.gdx.graphics.GL20;
import com.badlogic.gdx.graphics.Texture;
import com.badlogic.gdx.graphics.g2d.Sprite;
import com.badlogic.gdx.graphics.g2d.SpriteBatch;
import com.badlogic.gdx.graphics.g2d.TextureAtlas;
import com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion;
import com.badlogic.gdx.utils.Timer;
import com.badlogic.gdx.utils.Timer.Task;

public class DemoGame extends ApplicationAdapter {
	private String TAG = "DemoGame";

	private SpriteBatch batch;
	private Texture texture;
	private Sprite sprite;
	private TextureAtlas textureAtlas;
	private int currentFrame = 1;
	private String currentAtlasKey = new String("0001");
	

	@Override
	public void create() {
		batch = new SpriteBatch();
		
		textureAtlas = new TextureAtlas(Gdx.files.internal("data/spritesheet.atlas"));
		AtlasRegion atlasRegion = textureAtlas.findRegion("0001");
		sprite = new Sprite(atlasRegion);
		sprite.setPosition(120, 100);
		sprite.scale(2.5f);
		Timer.schedule(new Task() {
			
			@Override
			public void run() {
				currentFrame++;
                if(currentFrame > 20)
                    currentFrame = 1;
                
                // ATTENTION! String.format() doesnt work under GWT for god knows why...
                currentAtlasKey = String.format("%04d", currentFrame);
                sprite.setRegion(textureAtlas.findRegion(currentAtlasKey));
			}
			
		}, 0, 1/30.0f);
		
	}

	@Override
	public void render() {
		Gdx.gl.glClearColor(0, 0, 0, 1);
        Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);
        
        batch.begin();
        sprite.draw(batch);
        batch.end();
		
	}

	@Override
	public void resize(int width, int height) {
		Gdx.app.debug(TAG, "resize");
		super.resize(width, height);

	}

	@Override
	public void pause() {
		Gdx.app.debug(TAG, "pause");
		super.pause();
	}

	@Override
	public void resume() {
		Gdx.app.debug(TAG, "resume");
		super.resume();
	}

	@Override
	public void dispose() {
		Gdx.app.debug(TAG, "dispose");
		batch.dispose();
        textureAtlas.dispose();
		super.dispose();
	}

}
