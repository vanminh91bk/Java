package com.vanminh.demogame;

import com.badlogic.gdx.ApplicationAdapter;
import com.badlogic.gdx.Gdx;
import com.badlogic.gdx.Input;
import com.badlogic.gdx.graphics.Texture;
import com.badlogic.gdx.graphics.g2d.Animation;
import com.badlogic.gdx.graphics.g2d.Sprite;
import com.badlogic.gdx.graphics.g2d.SpriteBatch;
import com.badlogic.gdx.graphics.g2d.TextureAtlas;

public class DemoGame extends ApplicationAdapter {
	private String TAG = "DemoGame";

	private SpriteBatch batch;
    private Texture texture;
    private Sprite sprite;

	

	@Override
	public void create() {
		bfloat w = Gdx.graphics.getWidth();
        float h = Gdx.graphics.getHeight();
        batch = new SpriteBatch();
        
        texture = new Texture(Gdx.files.internal("data/0001.png"));
        sprite = new Sprite(texture);
        sprite.setPosition(w/2 -sprite.getWidth()/2, h/2 - sprite.getHeight()/2);
		
	}

	@Override
	public void render() {
		Gdx.gl.glClearColor(1, 1, 1, 1);
        Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);
        
        if(Gdx.input.isKeyPressed(Input.Keys.LEFT)){
            if(Gdx.input.isKeyPressed(Input.Keys.CONTROL_LEFT))
                sprite.translateX(-1f);
            else
                sprite.translateX(-10.0f);
        }
        if(Gdx.input.isKeyPressed(Input.Keys.RIGHT)){
            if(Gdx.input.isKeyPressed(Input.Keys.CONTROL_LEFT))
                sprite.translateX(1f);
            else
                sprite.translateX(10.0f);
        }
        batch.begin();
        sprite.draw(batch);
        batch.end();
		
	}

	@Override
	public void resize(int width, int height) {
		Gdx.app.debug(TAG, "resize");
		super.resize(width, height);

	}

	@Override
	public void pause() {
		Gdx.app.debug(TAG, "pause");
		super.pause();
	}

	@Override
	public void resume() {
		Gdx.app.debug(TAG, "resume");
		super.resume();
	}

	@Override
	public void dispose() {
		Gdx.app.debug(TAG, "dispose");
		batch.dispose();
        textureAtlas.dispose();
		super.dispose();
	}

}
